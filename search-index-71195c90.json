[{"documents":[{"i":1,"t":"This is Document Number 3","u":"/quran-hadith-search/docs/doc3","b":["Books"]},{"i":3,"t":"编写良好的单元测试","u":"/quran-hadith-search/docs/docs4","b":["Books"]},{"i":15,"t":"Intro","u":"/quran-hadith-search/docs/intro","b":["Books"]},{"i":17,"t":"test","u":"/quran-hadith-search/docs/test","b":["Books"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[0,0.854,1,0.854,2,0.854]],["t/3",[3,1.394]],["t/15",[4,1.394]],["t/17",[5,1.394]]],"invertedIndex":[["",{"_index":3,"t":{"3":{"position":[[0,9]]}}}],["3",{"_index":2,"t":{"1":{"position":[[24,1]]}}}],["document",{"_index":0,"t":{"1":{"position":[[8,8]]}}}],["intro",{"_index":4,"t":{"15":{"position":[[0,5]]}}}],["number",{"_index":1,"t":{"1":{"position":[[17,6]]}}}],["test",{"_index":5,"t":{"17":{"position":[[0,4]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":5,"t":"基本方法","u":"/quran-hadith-search/docs/docs4","h":"#基本方法","p":3},{"i":7,"t":"输入","u":"/quran-hadith-search/docs/docs4","h":"#输入","p":3},{"i":9,"t":"输出","u":"/quran-hadith-search/docs/docs4","h":"#输出","p":3},{"i":11,"t":"重构与拆分","u":"/quran-hadith-search/docs/docs4","h":"#重构与拆分","p":3},{"i":13,"t":"总结","u":"/quran-hadith-search/docs/docs4","h":"#总结","p":3}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/5",[0,0.087]],["t/7",[0,0.087]],["t/9",[0,0.087]],["t/11",[0,0.087]],["t/13",[0,0.087]]],"invertedIndex":[["",{"_index":0,"t":{"5":{"position":[[0,4]]},"7":{"position":[[0,2]]},"9":{"position":[[0,2]]},"11":{"position":[[0,5]]},"13":{"position":[[0,2]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":2,"t":"This is Document Number 3","s":"This is Document Number 3","u":"/quran-hadith-search/docs/doc3","h":"","p":1},{"i":4,"t":"编写良好的单元测试","s":"编写良好的单元测试","u":"/quran-hadith-search/docs/docs4","h":"","p":3},{"i":6,"t":"编写单元测试的基本方法其实很简单： 给定输入 运行 断言输出 而一个好的单元测试的要求也很简单： 覆盖足够的输入场景 进行充分的输出断言 一个最简单的例子： // `add.ts`function add(a: number, b: number): number { return a + b;} // `add.spec.ts`test(\"add(1, 2) should return 3\", () => { expect(add(1, 2)).toBe(3);}); 我们编写单元测试的步骤如下： 给定输入：1, 2 运行： add(...) 断言输出：expect(...).toBe(3) 是不是很简单？当然，真实业务场景下我们要测试的单元远比上述例子复杂得多。 输入更加复杂，除了普通的函数输入参数，还可能有外部的事件，因此难以覆盖所有场景 输出更加复杂，除了普通的函数输出结果，还可能有对外部的副作用，因此难以断言运行结果 这里提到的输入、输出不再是狭义上的函数输入、输出。我们将所有可能影响测试对象行为的外部因素都称之为输入，将所有测试对象运行后对外部造成的影响都称之为输出。这样理解之后，我们就可以化繁为简，将测试过程回归到前面提到的最基本的方法上。 所以编写良好的单元测试首先要做的就是厘清测试对象的输入、输出，掌握覆盖不同形式的输入、断言不同形式的输出的方法。我们将分开讨论它们。","s":"基本方法","u":"/quran-hadith-search/docs/docs4","h":"#基本方法","p":3},{"i":8,"t":"足够简单的输入让我们可以花更少的时间、覆盖更多的场景。输入的来源大致有以下几种： 普通变量参数 外部依赖发送的事件 GUI 操作事件 编写测试覆盖它们的复杂度依次增大。除了第一个，其它都可以看作外部事件，也可以理解为来自外界的副作用。对于普通变量参数，我们只需构造这些参数即可完成给定输入的任务。而对于外部事件，我们要做的就是想办法触发这些事件。 我们依然看一个简单的例子： // `MyComponent.ts`window.addEventListener(\"resize\", () => { ... }); 如何覆盖？主动发送这个事件： // `MyComponent.spec.ts`test(\"MyComponent\", () => { window.dispatchEvent(new Event(\"resize\")); // ...}); 再看一个例子： // `MyComponent.tsx`const handleChange = (value: string): void => { ... };return <Editor onChange={handleChange} /> 如何覆盖依赖组件的特定事件？主动触发依赖组件的事件： // `MyComponent.spec.tsx`test(\"MyComponent\", () => { const wrapper = shallow(<MyComponent />); wrapper.find(Editor).invoke(\"onChange\")(\"faked value\"); // ...});","s":"输入","u":"/quran-hadith-search/docs/docs4","h":"#输入","p":3},{"i":10,"t":"足够简单的输出让我们可以更容易地断言运行结果。输出的形态大致有以下几种： 普通变量输出 GUI 的变化 外部依赖的调用 在测试中对它们进行断言的复杂度依次增大。除了第一个，其它都可以看作对外界的副作用。对于普通变量输出，我们只需简单地断言它的值即可。而对于对外界的副作用，我们要做的就是想办法断言这些副作用的影响。 我们继续看一个简单的例子： // `handleClick.ts`function handleClick(): void { history.push(\"/next/url\");} 如何断言？我们可以断言副作用的影响结果： // `handleClick.spec.ts`test(\"handleClick\", () => { handleClick(); expect(history.location.pathname).toBe(\"/next/url\");}); 有时副作用所影响的结果难以断言，或者该依赖被 Mocked，那么我们可以监视该副作用的触发点是否被正确调用了： // `handleClick.spec.ts`test(\"handleClick\", () => { const spyOnHistoryPush = jest.spyOn(history, \"push\"); expect(spyOnHistoryPush).toBeCalledWith(\"/next/url\");}); 再看一个 React 组件的例子： // `MyComponent.tsx`const handleValidation = (valid: boolean): void => { this.setState({ valid });};return ( <Form.Item className={this.state.valid ? \"valid\" : \"invalid\"}> <Input /> </Form.Item>); 如何断言？判断依赖组件的变化： // `MyComponent.spec.tsx`test(\"MyComponent\", () => { const wrapper = shallow(<MyComponent />); // ... after something trigger `handleValidation()` expect(wrapper.find(Form.Item).prop(\"className\")).toBe(\"invalid\");}); 始终记得要断言测试对象运行后对外界的副作用影响。 另外断言的目标应该是对外的影响，而不是内部状态，因为内部状态并不是测试对象的输出。一个错误的例子： // `MyComponent.bad.spec.tsx`expect(wrapper.instance().state.valid).toBe(\"invalid\");","s":"输出","u":"/quran-hadith-search/docs/docs4","h":"#输出","p":3},{"i":12,"t":"更简单的输入、输出让我们可以更容易地编写好的单元测试，但往往实际情况是业务需求不断增长，组件内部逻辑不断复杂化，输入输出的形式形态更加多样化，为组件编写单元测试的难度也随之陡增。 适时地重构与拆分是解决这个问题的关键。在如今的前端组件化的模式下尤为重要，合理拆分后的组件可以让每个测试单元的输入输出都变得更少、更聚焦。诸如 React, Redux 等主流框架和工具推崇的单向数据流盛行的其中一个原因就是它们巧妙地让各个单元的输入来源、输出影响单一化，从而降低编写单元测试的难度，同时提升组件集成时的信心。","s":"重构与拆分","u":"/quran-hadith-search/docs/docs4","h":"#重构与拆分","p":3},{"i":14,"t":"编写良好的单元测试总结下来就是三条： 识别测试对象的输入、输出 掌握不同形态下的输入覆盖、输出断言的方法 适时地重构与拆分 希望以上内容对大家有所帮助。","s":"总结","u":"/quran-hadith-search/docs/docs4","h":"#总结","p":3},{"i":16,"t":"Intro","s":"Intro","u":"/quran-hadith-search/docs/intro","h":"","p":15},{"i":18,"t":"test","s":"test","u":"/quran-hadith-search/docs/test","h":"","p":17}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/2",[0,2.923,1,2.136,2,2.136]],["t/4",[3,0.706]],["t/6",[1,1.828,2,1.015,3,0.869,4,1.389,5,1.389,6,2.084,7,1.153,8,1.389,9,2.084,10,1.389,11,1.389,12,1.389,13,1.389,14,1.389]],["t/8",[3,0.882,7,0.641,15,0.847,16,1.159,17,1.159,18,1.159,19,1.159,20,0.847,21,1.159,22,1.814,23,1.159,24,0.847,25,1.159,26,1.159,27,0.847,28,0.847,29,0.847,30,0.847,31,1.159]],["t/10",[3,0.869,7,0.49,15,0.647,20,0.647,24,1.068,27,0.647,28,1.068,29,0.647,30,0.647,32,0.886,33,1.462,34,0.886,35,1.462,36,0.886,37,0.886,38,0.886,39,0.886,40,0.886,41,0.886,42,0.647,43,1.462,44,1.866,45,0.886,46,0.886,47,1.462,48,0.886,49,0.886,50,0.886,51,0.886,52,0.886,53,0.886,54,0.886]],["t/12",[3,0.809,42,2.016,55,2.758]],["t/14",[3,0.86]],["t/16",[56,3.109]],["t/18",[57,3.109]]],"invertedIndex":[["",{"_index":3,"t":{"4":{"position":[[0,9]]},"6":{"position":[[0,17],[18,4],[23,2],[26,4],[31,17],[49,9],[59,9],[69,9],[79,2],[133,1],[144,1],[150,2],[200,2],[203,2],[206,1],[238,14],[263,3],[301,36],[338,39],[378,41],[420,115],[536,66]]},"8":{"position":[[0,40],[41,6],[48,9],[62,4],[67,106],[174,13],[188,2],[241,2],[244,2],[247,1],[249,3],[253,3],[257,14],[272,2],[316,2],[319,2],[322,1],[367,2],[370,6],[377,7],[385,2],[424,1],[448,2],[451,1],[453,3],[498,2],[501,26],[528,2],[573,2],[576,2],[579,1],[595,1],[618,4],[679,2],[682,6]]},"10":{"position":[[0,36],[37,6],[48,3],[52,7],[60,97],[158,13],[172,2],[220,1],[250,20],[271,2],[315,2],[318,2],[321,1],[394,22],[450,2],[494,2],[497,2],[500,1],[525,1],[613,4],[624,6],[631,2],[674,1],[699,2],[702,1],[738,1],[779,1],[789,1],[810,2],[828,15],[844,2],[889,2],[892,2],[895,1],[911,1],[934,4],[939,2],[942,3],[1061,24],[1086,49],[1136,2]]},"12":{"position":[[0,89],[90,71],[175,78]]},"14":{"position":[[0,18],[19,12],[32,20],[53,8],[62,14]]}}}],["1",{"_index":12,"t":{"6":{"position":[[253,7]]}}}],["2",{"_index":9,"t":{"6":{"position":[[179,2],[261,1]]}}}],["2)).tobe(3",{"_index":11,"t":{"6":{"position":[[222,15]]}}}],["3",{"_index":2,"t":{"2":{"position":[[24,1]]},"6":{"position":[[196,3]]}}}],["add",{"_index":13,"t":{"6":{"position":[[267,8]]}}}],["add(a",{"_index":5,"t":{"6":{"position":[[99,6]]}}}],["add.spec.ts`test(\"add(1",{"_index":8,"t":{"6":{"position":[[153,25]]}}}],["add.ts`funct",{"_index":4,"t":{"6":{"position":[[82,16]]}}}],["b",{"_index":6,"t":{"6":{"position":[[114,2],[146,3]]}}}],["boolean",{"_index":45,"t":{"10":{"position":[[684,9]]}}}],["classname={this.state.valid",{"_index":48,"t":{"10":{"position":[[751,27]]}}}],["const",{"_index":28,"t":{"8":{"position":[[581,5]]},"10":{"position":[[502,5],[897,5]]}}}],["document",{"_index":0,"t":{"2":{"position":[[8,8]]}}}],["editor",{"_index":25,"t":{"8":{"position":[[466,7]]}}}],["event(\"res",{"_index":19,"t":{"8":{"position":[[349,17]]}}}],["expect(...).tobe(3",{"_index":14,"t":{"6":{"position":[[276,24]]}}}],["expect(add(1",{"_index":10,"t":{"6":{"position":[[208,13]]}}}],["expect(history.location.pathname).tobe(\"/next/url",{"_index":36,"t":{"10":{"position":[[338,55]]}}}],["expect(spyonhistorypush).tobecalledwith(\"/next/url",{"_index":41,"t":{"10":{"position":[[556,56]]}}}],["expect(wrapper.find(form.item).prop(\"classname\")).tobe(\"invalid",{"_index":53,"t":{"10":{"position":[[991,69]]}}}],["form.item",{"_index":47,"t":{"10":{"position":[[740,10],[813,14]]}}}],["gui",{"_index":15,"t":{"8":{"position":[[58,3]]},"10":{"position":[[44,3]]}}}],["handlechang",{"_index":21,"t":{"8":{"position":[[411,12]]}}}],["handleclick",{"_index":33,"t":{"10":{"position":[[200,14],[323,14]]}}}],["handleclick.spec.ts`test(\"handleclick",{"_index":35,"t":{"10":{"position":[[274,40],[453,40]]}}}],["handleclick.ts`funct",{"_index":32,"t":{"10":{"position":[[175,24]]}}}],["handlevalid",{"_index":43,"t":{"10":{"position":[[657,16],[970,20]]}}}],["history.push(\"/next/url",{"_index":34,"t":{"10":{"position":[[222,27]]}}}],["input",{"_index":50,"t":{"10":{"position":[[803,6]]}}}],["intro",{"_index":56,"t":{"16":{"position":[[0,5]]}}}],["invalid",{"_index":49,"t":{"10":{"position":[[791,11]]}}}],["jest.spyon(histori",{"_index":39,"t":{"10":{"position":[[527,19]]}}}],["mock",{"_index":37,"t":{"10":{"position":[[417,32]]}}}],["mycomponent.bad.spec.tsx`expect(wrapper.instance().state.valid).tobe(\"invalid",{"_index":54,"t":{"10":{"position":[[1139,81]]}}}],["mycomponent.spec.ts`test(\"mycompon",{"_index":17,"t":{"8":{"position":[[275,40]]}}}],["mycomponent.spec.tsx`test(\"mycompon",{"_index":27,"t":{"8":{"position":[[531,41]]},"10":{"position":[[847,41]]}}}],["mycomponent.ts`window.addeventlistener(\"res",{"_index":16,"t":{"8":{"position":[[191,49]]}}}],["mycomponent.tsx`const",{"_index":20,"t":{"8":{"position":[[388,22]]},"10":{"position":[[634,22]]}}}],["number",{"_index":1,"t":{"2":{"position":[[17,6]]},"6":{"position":[[106,7],[117,8],[126,6]]}}}],["onchange={handlechang",{"_index":26,"t":{"8":{"position":[[474,23]]}}}],["push",{"_index":40,"t":{"10":{"position":[[547,8]]}}}],["react",{"_index":42,"t":{"10":{"position":[[618,5]]},"12":{"position":[[162,6]]}}}],["redux",{"_index":55,"t":{"12":{"position":[[169,5]]}}}],["return",{"_index":7,"t":{"6":{"position":[[135,6],[189,6]]},"8":{"position":[[457,8]]},"10":{"position":[[726,11]]}}}],["shallow(<mycompon",{"_index":30,"t":{"8":{"position":[[597,20]]},"10":{"position":[[913,20]]}}}],["someth",{"_index":51,"t":{"10":{"position":[[952,9]]}}}],["spyonhistorypush",{"_index":38,"t":{"10":{"position":[[508,16]]}}}],["string",{"_index":23,"t":{"8":{"position":[[434,8]]}}}],["test",{"_index":57,"t":{"18":{"position":[[0,4]]}}}],["this.setst",{"_index":46,"t":{"10":{"position":[[704,15]]}}}],["trigger",{"_index":52,"t":{"10":{"position":[[962,7]]}}}],["valid",{"_index":44,"t":{"10":{"position":[[676,7],[720,5],[781,7]]}}}],["valu",{"_index":22,"t":{"8":{"position":[[426,7],[670,8]]}}}],["void",{"_index":24,"t":{"8":{"position":[[443,4]]},"10":{"position":[[215,4],[694,4]]}}}],["window.dispatchevent(new",{"_index":18,"t":{"8":{"position":[[324,24]]}}}],["wrapper",{"_index":29,"t":{"8":{"position":[[587,7]]},"10":{"position":[[903,7]]}}}],["wrapper.find(editor).invoke(\"onchange\")(\"fak",{"_index":31,"t":{"8":{"position":[[623,46]]}}}]],"pipeline":["stemmer"]}}]